name: CI

on:
  push:
    branches:
      - main
    tags: '*'

  pull_request:
    branches:
      - main

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  run-tests:
    name: Julia ${{ matrix.version }} (${{ matrix.os }}, ${{ matrix.arch }})

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, x86]
        version: ['1.6', '1.7', '1.8']

        exclude:
          - os: macos-latest
            arch: x86

    runs-on: ${{ matrix.os }}

    env:
        codecov-arch: x64
        codecov-version: '1.8'

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - name: Set up Julia caches
        uses: julia-actions/cache@v1
        with:
          cache-name: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.version }}-${{ hashFiles('.github/workflows/CI.yml') }}

      - name: Build package
        uses: julia-actions/julia-buildpkg@v1

      - name: Run tests
        uses: julia-actions/julia-runtest@v1

      - name: Process coverage data
        # Only run for 'main' branch running on 'Linux' with the latest version of Julia
        if: |
            github.ref_name == 'main' &&
            runner.os == 'Linux' &&
            matrix.arch == env.codecov-arch &&
            matrix.version == env.codecov-version

        uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src

      - name: Upload code coverage data to codecov.io
        # Only run for 'main' branch running on 'Linux' with the latest version of Julia
        if: |
            github.ref_name == 'main' &&
            runner.os == 'Linux' &&
            matrix.arch == env.codecov-arch &&
            matrix.version == env.codecov-version

        uses: codecov/codecov-action@v2
        with:
          token: 7c23e583-ed11-43ef-8fe6-54307b67830c
          files: lcov.info
          fail_ci_if_error: true
          verbose: true

  build-docs:
    name: Build Documentation

    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Julia environment
        uses: julia-actions/setup-julia@latest
        with:
          version: '1.8'

      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'

      - name: Build documentation
        run: julia --project=docs/ --compile=min -O0 docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
